// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from '@hey-api/client-fetch';
import type { SignupApiAuthSignupPostData, SignupApiAuthSignupPostResponse, SignupApiAuthSignupPostError, ChallengeApiAuthLoginChallengePostData, ChallengeApiAuthLoginChallengePostResponse, ChallengeApiAuthLoginChallengePostError, AnswerApiAuthLoginAnswerPostData, AnswerApiAuthLoginAnswerPostResponse, AnswerApiAuthLoginAnswerPostError, LogoutApiAuthLogoutPostData, HandleCreateGroupApiGroupsCreatePostData, HandleCreateGroupApiGroupsCreatePostResponse, HandleCreateGroupApiGroupsCreatePostError, HandleAddGroupUserApiGroupsAddPostData, HandleAddGroupUserApiGroupsAddPostResponse, HandleAddGroupUserApiGroupsAddPostError, HandleGetUserGroupsApiGroupsGetData, HandleGetUserGroupsApiGroupsGetResponse, HandleGetGroupUsersApiGroupsUsersGetData, HandleGetGroupUsersApiGroupsUsersGetResponse, HandleGetGroupUsersApiGroupsUsersGetError, GetGroupMessagesApiMessagesGetData, GetGroupMessagesApiMessagesGetResponse, SendMessageApiMessagesPostData, SendMessageApiMessagesPostResponse, SendMessageApiMessagesPostError, UploadApiMessagesUploadPostData, UploadApiMessagesUploadPostError, DownloadApiMessagesDownloadPostData, DownloadApiMessagesDownloadPostError, WhoamiApiSessionWhoamiGetData, WhoamiApiSessionWhoamiGetResponse, HandleGetUserByUsernameApiUsersUsernameGetData, HandleGetUserByUsernameApiUsersUsernameGetResponse, HandleGetUserByUsernameApiUsersUsernameGetError, HandleGetUserByIdApiUsersIdGetData, HandleGetUserByIdApiUsersIdGetResponse, HandleGetUserByIdApiUsersIdGetError, HandleEditProfileApiUsersEditProfilePostData, HandleEditProfileApiUsersEditProfilePostResponse, HandleEditProfileApiUsersEditProfilePostError, GetAllUsersApiUsersAllGetData, GetAllUsersApiUsersAllGetResponse, GetAllUsersApiUsersAllGetError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Signup
 */
export const signupApiAuthSignupPost = <ThrowOnError extends boolean = false>(options: Options<SignupApiAuthSignupPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SignupApiAuthSignupPostResponse, SignupApiAuthSignupPostError, ThrowOnError>({
        url: '/api/auth/signup',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Challenge
 */
export const challengeApiAuthLoginChallengePost = <ThrowOnError extends boolean = false>(options: Options<ChallengeApiAuthLoginChallengePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ChallengeApiAuthLoginChallengePostResponse, ChallengeApiAuthLoginChallengePostError, ThrowOnError>({
        url: '/api/auth/login_challenge',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Answer
 */
export const answerApiAuthLoginAnswerPost = <ThrowOnError extends boolean = false>(options: Options<AnswerApiAuthLoginAnswerPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AnswerApiAuthLoginAnswerPostResponse, AnswerApiAuthLoginAnswerPostError, ThrowOnError>({
        url: '/api/auth/login_answer',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Logout
 */
export const logoutApiAuthLogoutPost = <ThrowOnError extends boolean = false>(options?: Options<LogoutApiAuthLogoutPostData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
        url: '/api/auth/logout',
        ...options
    });
};

/**
 * Handle Create Group
 */
export const handleCreateGroupApiGroupsCreatePost = <ThrowOnError extends boolean = false>(options: Options<HandleCreateGroupApiGroupsCreatePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<HandleCreateGroupApiGroupsCreatePostResponse, HandleCreateGroupApiGroupsCreatePostError, ThrowOnError>({
        url: '/api/groups/create',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Handle Add Group User
 */
export const handleAddGroupUserApiGroupsAddPost = <ThrowOnError extends boolean = false>(options: Options<HandleAddGroupUserApiGroupsAddPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<HandleAddGroupUserApiGroupsAddPostResponse, HandleAddGroupUserApiGroupsAddPostError, ThrowOnError>({
        url: '/api/groups/add',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Handle Get User Groups
 */
export const handleGetUserGroupsApiGroupsGet = <ThrowOnError extends boolean = false>(options?: Options<HandleGetUserGroupsApiGroupsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<HandleGetUserGroupsApiGroupsGetResponse, unknown, ThrowOnError>({
        url: '/api/groups/',
        ...options
    });
};

/**
 * Handle Get Group Users
 */
export const handleGetGroupUsersApiGroupsUsersGet = <ThrowOnError extends boolean = false>(options: Options<HandleGetGroupUsersApiGroupsUsersGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<HandleGetGroupUsersApiGroupsUsersGetResponse, HandleGetGroupUsersApiGroupsUsersGetError, ThrowOnError>({
        url: '/api/groups/users',
        ...options
    });
};

/**
 * Get Group Messages
 */
export const getGroupMessagesApiMessagesGet = <ThrowOnError extends boolean = false>(options?: Options<GetGroupMessagesApiMessagesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetGroupMessagesApiMessagesGetResponse, unknown, ThrowOnError>({
        url: '/api/messages/',
        ...options
    });
};

/**
 * Send Message
 */
export const sendMessageApiMessagesPost = <ThrowOnError extends boolean = false>(options: Options<SendMessageApiMessagesPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SendMessageApiMessagesPostResponse, SendMessageApiMessagesPostError, ThrowOnError>({
        url: '/api/messages/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Upload
 */
export const uploadApiMessagesUploadPost = <ThrowOnError extends boolean = false>(options: Options<UploadApiMessagesUploadPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, UploadApiMessagesUploadPostError, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/messages/upload',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

/**
 * Download
 */
export const downloadApiMessagesDownloadPost = <ThrowOnError extends boolean = false>(options: Options<DownloadApiMessagesDownloadPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, DownloadApiMessagesDownloadPostError, ThrowOnError>({
        url: '/api/messages/download',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Whoami
 */
export const whoamiApiSessionWhoamiGet = <ThrowOnError extends boolean = false>(options?: Options<WhoamiApiSessionWhoamiGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<WhoamiApiSessionWhoamiGetResponse, unknown, ThrowOnError>({
        url: '/api/session/whoami',
        ...options
    });
};

/**
 * Handle Get User By Username
 */
export const handleGetUserByUsernameApiUsersUsernameGet = <ThrowOnError extends boolean = false>(options: Options<HandleGetUserByUsernameApiUsersUsernameGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<HandleGetUserByUsernameApiUsersUsernameGetResponse, HandleGetUserByUsernameApiUsersUsernameGetError, ThrowOnError>({
        url: '/api/users/username',
        ...options
    });
};

/**
 * Handle Get User By Id
 */
export const handleGetUserByIdApiUsersIdGet = <ThrowOnError extends boolean = false>(options: Options<HandleGetUserByIdApiUsersIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<HandleGetUserByIdApiUsersIdGetResponse, HandleGetUserByIdApiUsersIdGetError, ThrowOnError>({
        url: '/api/users/id',
        ...options
    });
};

/**
 * Handle Edit Profile
 */
export const handleEditProfileApiUsersEditProfilePost = <ThrowOnError extends boolean = false>(options: Options<HandleEditProfileApiUsersEditProfilePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<HandleEditProfileApiUsersEditProfilePostResponse, HandleEditProfileApiUsersEditProfilePostError, ThrowOnError>({
        url: '/api/users/edit_profile',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get All Users
 */
export const getAllUsersApiUsersAllGet = <ThrowOnError extends boolean = false>(options: Options<GetAllUsersApiUsersAllGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAllUsersApiUsersAllGetResponse, GetAllUsersApiUsersAllGetError, ThrowOnError>({
        url: '/api/users/all',
        ...options
    });
};